{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diogo\\\\Desktop\\\\livescore\\\\src\\\\Components\\\\Game\\\\Results.js\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchTodaysLeagueData } from \"../../Redux/Actions\";\nimport { device } from \"../../objects/devices\";\nimport FavMatches from \"./FavMatches\"; // import League from \"./League\";\n\nimport styled from \"styled-components\";\nconst ResultsDivStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 15px 2vw;\n  align-items: center;\n  position: relative;\n  @media ${device.mobileL} {\n    padding: 10px 2vw;\n  }\n`;\n\nconst Results = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTodaysLeagueData());\n  }, [dispatch]);\n  const data = useSelector(state => state.todaysLeagueData);\n  console.log(data); // const ids = data.matches.map((elem) => {\n  //   return [elem.competition.name, elem.competition.id, elem.competition.area.ensignUrl];\n  // });\n\n  const yo = data.matches.map(each => console.log(each));\n  console.log(yo); // const uniqueLeagues = Array.from(\n  //   new Set(ids.map(JSON.stringify)),\n  //   JSON.parse\n  // );\n\n  return /*#__PURE__*/React.createElement(ResultsDivStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FavMatches, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Results;","map":{"version":3,"sources":["C:/Users/diogo/Desktop/livescore/src/Components/Game/Results.js"],"names":["React","useEffect","useDispatch","useSelector","fetchTodaysLeagueData","device","FavMatches","styled","ResultsDivStyle","div","mobileL","Results","dispatch","data","state","todaysLeagueData","console","log","yo","matches","map","each"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,qBAAT,QAAsC,qBAAtC;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,eAAe,GAAGD,MAAM,CAACE,GAAI;;;;;;WAMxBJ,MAAM,CAACK,OAAQ;;;CAN1B;;AAWA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACR,qBAAqB,EAAtB,CAAR;AACD,GAFQ,EAEN,CAACQ,QAAD,CAFM,CAAT;AAIA,QAAMC,IAAI,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,gBAAlB,CAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EARoB,CAUpB;AACA;AACA;;AAEA,QAAMK,EAAE,GAAGL,IAAI,CAACM,OAAL,CAAaC,GAAb,CAAkBC,IAAD,IAAUL,OAAO,CAACC,GAAR,CAAYI,IAAZ,CAA3B,CAAX;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ,EAfoB,CAiBpB;AACA;AACA;AACA;;AAEA,sBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AASD,CA/BD;;AAiCA,eAAeP,OAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchTodaysLeagueData } from \"../../Redux/Actions\";\r\nimport { device } from \"../../objects/devices\";\r\nimport FavMatches from \"./FavMatches\";\r\n// import League from \"./League\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ResultsDivStyle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 15px 2vw;\r\n  align-items: center;\r\n  position: relative;\r\n  @media ${device.mobileL} {\r\n    padding: 10px 2vw;\r\n  }\r\n`;\r\n\r\nconst Results = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTodaysLeagueData());\r\n  }, [dispatch]);\r\n\r\n  const data = useSelector((state) => state.todaysLeagueData);\r\n  console.log(data);\r\n\r\n  // const ids = data.matches.map((elem) => {\r\n  //   return [elem.competition.name, elem.competition.id, elem.competition.area.ensignUrl];\r\n  // });\r\n\r\n  const yo = data.matches.map((each) => console.log(each));\r\n  console.log(yo);\r\n\r\n  // const uniqueLeagues = Array.from(\r\n  //   new Set(ids.map(JSON.stringify)),\r\n  //   JSON.parse\r\n  // );\r\n\r\n  return (\r\n    <ResultsDivStyle>\r\n      <FavMatches />\r\n      {/* {data.count > 0 &&\r\n        uniqueLeagues.map((elem, index) => (\r\n          <League key={elem[1]} name={elem[0]} logo={elem[2]} />\r\n        ))} */}\r\n    </ResultsDivStyle>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n"]},"metadata":{},"sourceType":"module"}