{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diogo\\\\Desktop\\\\livescore\\\\src\\\\Components\\\\Small Components\\\\Login.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Formik, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport * as actions from \"./../../Redux/Actions\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email.\").required(\"The email is required.\"),\n  password: Yup.string().required(\"The password is required.\")\n});\n\nconst Login = ({\n  login,\n  loading,\n  error,\n  cleanUp\n}) => {\n  console.log(login);\n  console.log(loading);\n  console.log(error);\n  console.log(cleanUp);\n  useEffect(() => {\n    return () => {\n      cleanUp();\n    };\n  }, [cleanUp]);\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: LoginSchema,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      console.log(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, ({\n    isSubmitting,\n    isValid\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Your email...\",\n    component: Input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Your password...\",\n    component: Input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: !isValid,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Login\")));\n};\n\nconst mapStateToProps = props => ({\n  loading: auth.loading,\n  error: auth.error\n});\n\nconst mapDispatchToProps = {\n  login: actions.signIn,\n  cleanUp: actions.clean\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/Users/diogo/Desktop/livescore/src/Components/Small Components/Login.js"],"names":["React","useEffect","connect","Formik","Field","Yup","actions","Input","Button","LoginSchema","object","shape","email","string","required","password","Login","login","loading","error","cleanUp","console","log","values","setSubmitting","isSubmitting","isValid","mapStateToProps","props","auth","mapDispatchToProps","signIn","clean"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,QAA9B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,WAAW,GAAGJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AACrCC,EAAAA,KAAK,EAAEP,GAAG,CAACQ,MAAJ,GACJD,KADI,CACE,gBADF,EAEJE,QAFI,CAEK,wBAFL,CAD8B;AAIrCC,EAAAA,QAAQ,EAAEV,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,2BAAtB;AAJ2B,CAAnB,CAApB;;AAOA,MAAME,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,KAAlB;AAAyBC,EAAAA;AAAzB,CAAD,KAAwC;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXmB,MAAAA,OAAO;AACR,KAFD;AAGD,GAJQ,EAIN,CAACA,OAAD,CAJM,CAAT;AAMA,sBACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbR,MAAAA,KAAK,EAAE,EADM;AAEbG,MAAAA,QAAQ,EAAE;AAFG,KADjB;AAKE,IAAA,gBAAgB,EAAEN,WALpB;AAME,IAAA,QAAQ,EAAE,CAACc,MAAD,EAAS;AAAEC,MAAAA;AAAF,KAAT,KAA+B;AACvCH,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUG,CAAC;AAAEE,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAD,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,eAHd;AAIE,IAAA,SAAS,EAAEnB,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC,kBAHd;AAIE,IAAA,SAAS,EAAEA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAaE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,CAACmB,OAAnB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAbF,CAXJ,CADF;AAgCD,CA3CD;;AA6CA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,OAAO,EAAEW,IAAI,CAACX,OADoB;AAElCC,EAAAA,KAAK,EAAEU,IAAI,CAACV;AAFsB,CAAZ,CAAxB;;AAKA,MAAMW,kBAAkB,GAAG;AACzBb,EAAAA,KAAK,EAAEX,OAAO,CAACyB,MADU;AAEzBX,EAAAA,OAAO,EAAEd,OAAO,CAAC0B;AAFQ,CAA3B;AAKA,eAAe9B,OAAO,CAACyB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cd,KAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Formik, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport * as actions from \"./../../Redux/Actions\";\r\nimport Input from \"./Input\";\r\nimport Button from \"./Button\";\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email(\"Invalid email.\")\r\n    .required(\"The email is required.\"),\r\n  password: Yup.string().required(\"The password is required.\"),\r\n});\r\n\r\nconst Login = ({ login, loading, error, cleanUp }) => {\r\n  console.log(login);\r\n  console.log(loading);\r\n  console.log(error);\r\n  console.log(cleanUp);\r\n  useEffect(() => {\r\n    return () => {\r\n      cleanUp();\r\n    };\r\n  }, [cleanUp]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        password: \"\",\r\n      }}\r\n      validationSchema={LoginSchema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        console.log(values);\r\n      }}\r\n    >\r\n      {({ isSubmitting, isValid }) => (\r\n        <div>\r\n          <Field\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Your email...\"\r\n            component={Input}\r\n          />\r\n          <Field\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Your password...\"\r\n            component={Input}\r\n          />\r\n          <Button disabled={!isValid} type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (props) => ({\r\n  loading: auth.loading,\r\n  error: auth.error,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  login: actions.signIn,\r\n  cleanUp: actions.clean,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}