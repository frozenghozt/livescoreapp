{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diogo\\\\Desktop\\\\livescore\\\\src\\\\Components\\\\Small Components\\\\Login.js\";\nimport React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Formik, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport * as actions from \"./../../Redux/Actions\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email.\").required(\"The email is required.\"),\n  password: Yup.string().required(\"The passoword is required.\").min(8, \"Too short.\")\n});\n\nconst Login = ({\n  login,\n  cleanUp\n}) => {\n  const loading = useSelector(state => state.auth.loading);\n  const error = useSelector(state => state.auth.error);\n  useEffect(() => {\n    return () => {\n      cleanUp();\n    };\n  }, [cleanUp]);\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: LoginSchema,\n    onSubmit: async (values, {\n      setSubmitting\n    }) => {\n      await login(values);\n      setSubmitting(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, ({\n    isSubmitting,\n    isValid\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Your email...\",\n    component: Input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Your password...\",\n    component: Input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: !isValid,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Login\")));\n};\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  return {\n    loading: auth.loading,\n    error: auth.error\n  };\n};\n\nconst mapDispatchToProps = {\n  login: actions.signIn,\n  cleanUp: actions.clean\n};\nexport default Login;","map":{"version":3,"sources":["C:/Users/diogo/Desktop/livescore/src/Components/Small Components/Login.js"],"names":["React","useEffect","useSelector","Formik","Field","Yup","actions","Input","Button","LoginSchema","object","shape","email","string","required","password","min","Login","login","cleanUp","loading","state","auth","error","values","setSubmitting","isSubmitting","isValid","mapStateToProps","mapDispatchToProps","signIn","clean"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,QAA9B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,WAAW,GAAGJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AACrCC,EAAAA,KAAK,EAAEP,GAAG,CAACQ,MAAJ,GACJD,KADI,CACE,gBADF,EAEJE,QAFI,CAEK,wBAFL,CAD8B;AAIrCC,EAAAA,QAAQ,EAAEV,GAAG,CAACQ,MAAJ,GACPC,QADO,CACE,4BADF,EAEPE,GAFO,CAEH,CAFG,EAEA,YAFA;AAJ2B,CAAnB,CAApB;;AASA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AACpC,QAAMC,OAAO,GAAGlB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,OAAvB,CAA3B;AACA,QAAMG,KAAK,GAAGrB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,KAAvB,CAAzB;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXkB,MAAAA,OAAO;AACR,KAFD;AAGD,GAJQ,EAIN,CAACA,OAAD,CAJM,CAAT;AAMA,sBACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbP,MAAAA,KAAK,EAAE,EADM;AAEbG,MAAAA,QAAQ,EAAE;AAFG,KADjB;AAKE,IAAA,gBAAgB,EAAEN,WALpB;AAME,IAAA,QAAQ,EAAE,OAAOe,MAAP,EAAe;AAAEC,MAAAA;AAAF,KAAf,KAAqC;AAC7C,YAAMP,KAAK,CAACM,MAAD,CAAX;AACAC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWG,CAAC;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAD,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,eAHd;AAIE,IAAA,SAAS,EAAEpB,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC,kBAHd;AAIE,IAAA,SAAS,EAAEA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAaE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,CAACoB,OAAnB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAbF,CAZJ,CADF;AAiCD,CA3CD;;AA6CA,MAAMC,eAAe,GAAG,CAAC;AAAEN,EAAAA;AAAF,CAAD,KAAc;AACpC,SAAO;AACLF,IAAAA,OAAO,EAAEE,IAAI,CAACF,OADT;AAELG,IAAAA,KAAK,EAAED,IAAI,CAACC;AAFP,GAAP;AAID,CALD;;AAOA,MAAMM,kBAAkB,GAAG;AACzBX,EAAAA,KAAK,EAAEZ,OAAO,CAACwB,MADU;AAEzBX,EAAAA,OAAO,EAAEb,OAAO,CAACyB;AAFQ,CAA3B;AAKA,eAAed,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Formik, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport * as actions from \"./../../Redux/Actions\";\r\nimport Input from \"./Input\";\r\nimport Button from \"./Button\";\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email(\"Invalid email.\")\r\n    .required(\"The email is required.\"),\r\n  password: Yup.string()\r\n    .required(\"The passoword is required.\")\r\n    .min(8, \"Too short.\"),\r\n});\r\n\r\nconst Login = ({ login, cleanUp }) => {\r\n  const loading = useSelector((state) => state.auth.loading);\r\n  const error = useSelector((state) => state.auth.error);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      cleanUp();\r\n    };\r\n  }, [cleanUp]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        password: \"\",\r\n      }}\r\n      validationSchema={LoginSchema}\r\n      onSubmit={async (values, { setSubmitting }) => {\r\n        await login(values);\r\n        setSubmitting(false);\r\n      }}\r\n    >\r\n      {({ isSubmitting, isValid }) => (\r\n        <div>\r\n          <Field\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Your email...\"\r\n            component={Input}\r\n          />\r\n          <Field\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Your password...\"\r\n            component={Input}\r\n          />\r\n          <Button disabled={!isValid} type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n  return {\r\n    loading: auth.loading,\r\n    error: auth.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: actions.signIn,\r\n  cleanUp: actions.clean,\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}